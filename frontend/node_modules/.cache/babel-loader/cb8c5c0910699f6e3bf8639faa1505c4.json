{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useEffect, useCallback, useMemo, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nimport { enqueueStateChange } from '../../services/react';\nimport { EuiMutationObserver } from '../observer/mutation_observer';\n\nfunction noop() {}\n\nfunction getElementText(element) {\n  return 'innerText' in element ? element.innerText : // (this line left here to satisfy Prettier since a ts-ignore is used on the next line)\n  // @ts-ignore TypeScript thinks element.innerText always exists, however it doesn't in jest/jsdom enviornment\n  element.textContent || undefined;\n}\n\nexport var EuiDataGridInMemoryRenderer = function EuiDataGridInMemoryRenderer(_ref) {\n  var inMemory = _ref.inMemory,\n      columns = _ref.columns,\n      rowCount = _ref.rowCount,\n      renderCellValue = _ref.renderCellValue,\n      onCellRender = _ref.onCellRender;\n\n  var _useState = useState(function () {\n    return document.createDocumentFragment();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      documentFragment = _useState2[0];\n\n  var cells = useMemo(function () {\n    var CellElement = renderCellValue;\n    var cells = [];\n\n    var _loop = function _loop(i) {\n      cells.push(columns.map(function (column) {\n        var skipThisColumn = inMemory.skipColumns && inMemory.skipColumns.indexOf(column.id) !== -1;\n\n        if (skipThisColumn) {\n          return null;\n        }\n\n        var isExpandable = column.isExpandable !== undefined ? column.isExpandable : true;\n        return React.createElement(\"div\", {\n          key: \"\".concat(i, \"-\").concat(column.id),\n          \"data-dg-row\": i,\n          \"data-dg-column\": column.id\n        }, React.createElement(CellElement, {\n          rowIndex: i,\n          columnId: column.id,\n          setCellProps: noop,\n          isExpandable: isExpandable,\n          isExpanded: false,\n          isDetails: false\n        }));\n      }).filter(function (cell) {\n        return cell != null;\n      }));\n    };\n\n    for (var i = 0; i < rowCount; i++) {\n      _loop(i);\n    }\n\n    return cells;\n  }, [rowCount, columns, inMemory.skipColumns, renderCellValue]);\n  var onMutation = useCallback(function (records) {\n    var _loop2 = function _loop2(i) {\n      var record = records[i];\n      var target = record.target;\n\n      while (true) {\n        if (target == null) return \"continue|recordLoop\"; // somehow hit the document fragment\n\n        if (target.nodeType === Node.ELEMENT_NODE && target.hasAttribute('data-dg-row')) {\n          // target is the cell wrapping div\n          break;\n        }\n\n        target = target.parentElement;\n      }\n\n      var cellDiv = target;\n      var rowIndex = parseInt(cellDiv.getAttribute('data-dg-row'), 10);\n      var column = cellDiv.getAttribute('data-dg-column');\n      enqueueStateChange(function () {\n        return onCellRender(rowIndex, column, getElementText(cellDiv));\n      });\n    };\n\n    recordLoop: for (var i = 0; i < records.length; i++) {\n      var _ret = _loop2(i);\n\n      if (_ret === \"continue|recordLoop\") continue recordLoop;\n    }\n  }, [onCellRender]);\n  useEffect(function () {\n    var cellDivs = documentFragment.childNodes[0].childNodes;\n\n    for (var i = 0; i < cellDivs.length; i++) {\n      var cellDiv = cellDivs[i];\n\n      var _rowIndex = parseInt(cellDiv.getAttribute('data-dg-row'), 10);\n\n      var column = cellDiv.getAttribute('data-dg-column');\n      onCellRender(_rowIndex, column, getElementText(cellDiv));\n    } // changes to documentFragment.children is reflected by `cells`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [onCellRender, cells]);\n  return createPortal(React.createElement(EuiMutationObserver, {\n    onMutation: onMutation,\n    observerOptions: {\n      characterData: true,\n      subtree: true,\n      attributes: true,\n      childList: true\n    }\n  }, function (ref) {\n    return React.createElement(\"div\", {\n      ref: ref\n    }, cells);\n  }), documentFragment);\n};\nEuiDataGridInMemoryRenderer.propTypes = {\n  inMemory: PropTypes.shape({\n    /**\n        Given the data flow Sorting->Pagination:\n        Each step can be performed by service calls or in-memory by the grid.\n        However, we cannot allow any service calls after an in-memory operation.\n        E.g. if Pagination requires a service call the grid cannot perform\n        in-memory Sorting. This means a single value representing the\n        service / in-memory boundary can be used. Thus there are four states for in-memory's level:\n        * \"enhancements\" - no in-memory operations, but use the available data to enhance the grid\n        * \"pagination\" - only pagination is performed in-memory\n        * \"sorting\" - sorting & pagination is performed in-memory\n     */\n    level: PropTypes.oneOf([\"enhancements\", \"pagination\", \"sorting\"]).isRequired,\n\n    /**\n       * An array of column ids for the in-memory processing to skip\n       */\n    skipColumns: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defaults to true. Defines whether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"]),\n\n    /**\n       * Display name as text for column. This can be used to display column name in column selector and column sorting where `display` won't be used. If not used `id` will be shown as column name in column selector and column sorting.\n       */\n    displayAsText: PropTypes.string\n  }).isRequired).isRequired,\n  rowCount: PropTypes.number.isRequired,\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/scott/Projects/flight_review_project/node_modules/@elastic/eui/es/components/datagrid/data_grid_inmemory_renderer.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","React","useEffect","useCallback","useMemo","useState","PropTypes","createPortal","enqueueStateChange","EuiMutationObserver","noop","getElementText","element","innerText","textContent","EuiDataGridInMemoryRenderer","_ref","inMemory","columns","rowCount","renderCellValue","onCellRender","_useState","document","createDocumentFragment","_useState2","documentFragment","cells","CellElement","_loop","map","column","skipThisColumn","skipColumns","indexOf","id","isExpandable","createElement","key","concat","rowIndex","columnId","setCellProps","isExpanded","isDetails","filter","cell","onMutation","records","_loop2","record","target","nodeType","Node","ELEMENT_NODE","hasAttribute","parentElement","cellDiv","parseInt","getAttribute","recordLoop","_ret","cellDivs","childNodes","_rowIndex","observerOptions","characterData","subtree","attributes","childList","ref","propTypes","shape","level","oneOf","isRequired","arrayOf","string","display","node","schema","bool","isResizable","initialWidth","number","isSortable","defaultSortDirection","displayAsText","oneOfType","func"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useCallback, useMemo, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nimport { enqueueStateChange } from '../../services/react';\nimport { EuiMutationObserver } from '../observer/mutation_observer';\n\nfunction noop() {}\n\nfunction getElementText(element) {\n  return 'innerText' in element ? element.innerText : // (this line left here to satisfy Prettier since a ts-ignore is used on the next line)\n  // @ts-ignore TypeScript thinks element.innerText always exists, however it doesn't in jest/jsdom enviornment\n  element.textContent || undefined;\n}\n\nexport var EuiDataGridInMemoryRenderer = function EuiDataGridInMemoryRenderer(_ref) {\n  var inMemory = _ref.inMemory,\n      columns = _ref.columns,\n      rowCount = _ref.rowCount,\n      renderCellValue = _ref.renderCellValue,\n      onCellRender = _ref.onCellRender;\n\n  var _useState = useState(function () {\n    return document.createDocumentFragment();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      documentFragment = _useState2[0];\n\n  var cells = useMemo(function () {\n    var CellElement = renderCellValue;\n    var cells = [];\n\n    var _loop = function _loop(i) {\n      cells.push(columns.map(function (column) {\n        var skipThisColumn = inMemory.skipColumns && inMemory.skipColumns.indexOf(column.id) !== -1;\n\n        if (skipThisColumn) {\n          return null;\n        }\n\n        var isExpandable = column.isExpandable !== undefined ? column.isExpandable : true;\n        return React.createElement(\"div\", {\n          key: \"\".concat(i, \"-\").concat(column.id),\n          \"data-dg-row\": i,\n          \"data-dg-column\": column.id\n        }, React.createElement(CellElement, {\n          rowIndex: i,\n          columnId: column.id,\n          setCellProps: noop,\n          isExpandable: isExpandable,\n          isExpanded: false,\n          isDetails: false\n        }));\n      }).filter(function (cell) {\n        return cell != null;\n      }));\n    };\n\n    for (var i = 0; i < rowCount; i++) {\n      _loop(i);\n    }\n\n    return cells;\n  }, [rowCount, columns, inMemory.skipColumns, renderCellValue]);\n  var onMutation = useCallback(function (records) {\n    var _loop2 = function _loop2(i) {\n      var record = records[i];\n      var target = record.target;\n\n      while (true) {\n        if (target == null) return \"continue|recordLoop\"; // somehow hit the document fragment\n\n        if (target.nodeType === Node.ELEMENT_NODE && target.hasAttribute('data-dg-row')) {\n          // target is the cell wrapping div\n          break;\n        }\n\n        target = target.parentElement;\n      }\n\n      var cellDiv = target;\n      var rowIndex = parseInt(cellDiv.getAttribute('data-dg-row'), 10);\n      var column = cellDiv.getAttribute('data-dg-column');\n      enqueueStateChange(function () {\n        return onCellRender(rowIndex, column, getElementText(cellDiv));\n      });\n    };\n\n    recordLoop: for (var i = 0; i < records.length; i++) {\n      var _ret = _loop2(i);\n\n      if (_ret === \"continue|recordLoop\") continue recordLoop;\n    }\n  }, [onCellRender]);\n  useEffect(function () {\n    var cellDivs = documentFragment.childNodes[0].childNodes;\n\n    for (var i = 0; i < cellDivs.length; i++) {\n      var cellDiv = cellDivs[i];\n\n      var _rowIndex = parseInt(cellDiv.getAttribute('data-dg-row'), 10);\n\n      var column = cellDiv.getAttribute('data-dg-column');\n      onCellRender(_rowIndex, column, getElementText(cellDiv));\n    } // changes to documentFragment.children is reflected by `cells`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [onCellRender, cells]);\n  return createPortal(React.createElement(EuiMutationObserver, {\n    onMutation: onMutation,\n    observerOptions: {\n      characterData: true,\n      subtree: true,\n      attributes: true,\n      childList: true\n    }\n  }, function (ref) {\n    return React.createElement(\"div\", {\n      ref: ref\n    }, cells);\n  }), documentFragment);\n};\nEuiDataGridInMemoryRenderer.propTypes = {\n  inMemory: PropTypes.shape({\n    /**\n        Given the data flow Sorting->Pagination:\n        Each step can be performed by service calls or in-memory by the grid.\n        However, we cannot allow any service calls after an in-memory operation.\n        E.g. if Pagination requires a service call the grid cannot perform\n        in-memory Sorting. This means a single value representing the\n        service / in-memory boundary can be used. Thus there are four states for in-memory's level:\n        * \"enhancements\" - no in-memory operations, but use the available data to enhance the grid\n        * \"pagination\" - only pagination is performed in-memory\n        * \"sorting\" - sorting & pagination is performed in-memory\n     */\n    level: PropTypes.oneOf([\"enhancements\", \"pagination\", \"sorting\"]).isRequired,\n\n    /**\n       * An array of column ids for the in-memory processing to skip\n       */\n    skipColumns: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defaults to true. Defines whether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"]),\n\n    /**\n       * Display name as text for column. This can be used to display column name in column selector and column sorting where `display` won't be used. If not used `id` will be shown as column name in column selector and column sorting.\n       */\n    displayAsText: PropTypes.string\n  }).isRequired).isRequired,\n  rowCount: PropTypes.number.isRequired,\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n  onCellRender: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}