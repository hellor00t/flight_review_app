{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport PropTypes from \"prop-types\";\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { cloneElement, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport chroma from 'chroma-js';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiColorPickerSwatch } from './color_picker_swatch';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport { EuiFieldText, EuiFormControlLayout, EuiFormRow, EuiRange } from '../form';\nimport { EuiI18n } from '../i18n';\nimport { EuiPopover } from '../popover';\nimport { EuiSpacer } from '../spacer';\nimport { VISUALIZATION_COLORS, keys } from '../../services';\nimport { EuiHue } from './hue';\nimport { EuiSaturation } from './saturation';\nimport { getChromaColor, parseColor, HEX_FALLBACK, HSV_FALLBACK, RGB_FALLBACK, RGB_JOIN } from './utils';\n\nfunction isKeyboardEvent(event) {\n  return _typeof(event) === 'object' && 'key' in event;\n}\n\nvar getOutput = function getOutput(text) {\n  var showAlpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var color = getChromaColor(text, true);\n  var isValid = true;\n\n  if (!showAlpha && color !== null) {\n    isValid = color.alpha() === 1;\n  } // Note that if a consumer has disallowed opacity,\n  // we still return the color with an alpha channel, but mark it as invalid\n\n\n  return color ? {\n    rgba: color.rgba(),\n    hex: color.hex(),\n    isValid: isValid\n  } : {\n    rgba: RGB_FALLBACK,\n    hex: HEX_FALLBACK,\n    isValid: false\n  };\n};\n\nvar getHsv = function getHsv(hsv) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Chroma's passthrough (RGB) parsing determines that black/white/gray are hue-less and returns `NaN`\n  // For our purposes we can process `NaN` as `0` if necessary\n\n  if (!hsv) return HSV_FALLBACK;\n  var hue = isNaN(hsv[0]) ? fallback : hsv[0];\n  return [hue, hsv[1], hsv[2]];\n};\n\nexport var EuiColorPicker = function EuiColorPicker(_ref) {\n  var button = _ref.button,\n      className = _ref.className,\n      color = _ref.color,\n      _ref$compressed = _ref.compressed,\n      compressed = _ref$compressed === void 0 ? false : _ref$compressed,\n      disabled = _ref.disabled,\n      _ref$display = _ref.display,\n      display = _ref$display === void 0 ? 'default' : _ref$display,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      id = _ref.id,\n      isInvalid = _ref.isInvalid,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'default' : _ref$mode,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$swatches = _ref.swatches,\n      swatches = _ref$swatches === void 0 ? VISUALIZATION_COLORS : _ref$swatches,\n      popoverZIndex = _ref.popoverZIndex,\n      prepend = _ref.prepend,\n      append = _ref.append,\n      _ref$showAlpha = _ref.showAlpha,\n      showAlpha = _ref$showAlpha === void 0 ? false : _ref$showAlpha,\n      format = _ref.format,\n      _ref$secondaryInputDi = _ref.secondaryInputDisplay,\n      secondaryInputDisplay = _ref$secondaryInputDi === void 0 ? 'none' : _ref$secondaryInputDi,\n      _ref$isClearable = _ref.isClearable,\n      isClearable = _ref$isClearable === void 0 ? false : _ref$isClearable,\n      placeholder = _ref.placeholder;\n  var preferredFormat = useMemo(function () {\n    if (format) return format;\n    var parsed = parseColor(color);\n    return parsed != null && _typeof(parsed) === 'object' ? 'rgba' : 'hex';\n  }, [color, format]);\n  var chromaColor = useMemo(function () {\n    return getChromaColor(color, showAlpha);\n  }, [color, showAlpha]);\n\n  var _useState = useState('100'),\n      _useState2 = _slicedToArray(_useState, 2),\n      alphaRangeValue = _useState2[0],\n      setAlphaRangeValue = _useState2[1];\n\n  var alphaChannel = useMemo(function () {\n    return chromaColor ? chromaColor.alpha() : 1;\n  }, [chromaColor]);\n  useEffect(function () {\n    var percent = (alphaChannel * 100).toFixed();\n    setAlphaRangeValue(percent);\n  }, [alphaChannel]);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isColorSelectorShown = _useState4[0],\n      setIsColorSelectorShown = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputRef = _useState6[0],\n      setInputRef = _useState6[1]; // Ideally this is uses `useRef`, but `EuiFieldText` isn't ready for that\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popoverShouldOwnFocus = _useState8[0],\n      setPopoverShouldOwnFocus = _useState8[1];\n\n  var prevColor = useRef(chromaColor ? chromaColor.rgba().join() : null);\n\n  var _useState9 = useState(chromaColor ? getHsv(chromaColor.hsv()) : HSV_FALLBACK),\n      _useState10 = _slicedToArray(_useState9, 2),\n      colorAsHsv = _useState10[0],\n      setColorAsHsv = _useState10[1];\n\n  var usableHsv = useMemo(function () {\n    if (chromaColor && chromaColor.rgba().join() !== prevColor.current) {\n      var _chromaColor$hsv = chromaColor.hsv(),\n          _chromaColor$hsv2 = _slicedToArray(_chromaColor$hsv, 3),\n          h = _chromaColor$hsv2[0],\n          s = _chromaColor$hsv2[1],\n          v = _chromaColor$hsv2[2];\n\n      var hue = isNaN(h) ? colorAsHsv[0] : h;\n      return [hue, s, v];\n    }\n\n    return colorAsHsv;\n  }, [chromaColor, colorAsHsv]);\n  var satruationRef = useRef(null);\n  var swatchRef = useRef(null);\n\n  var updateColorAsHsv = function updateColorAsHsv(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n        h = _ref3[0],\n        s = _ref3[1],\n        v = _ref3[2];\n\n    setColorAsHsv(getHsv([h, s, v], usableHsv[0]));\n  };\n\n  var classes = classNames('euiColorPicker', className);\n  var popoverClass = 'euiColorPicker__popoverAnchor';\n  var panelClasses = classNames('euiColorPicker__popoverPanel', {\n    'euiColorPicker__popoverPanel--pickerOnly': mode === 'picker' && secondaryInputDisplay !== 'bottom',\n    'euiColorPicker__popoverPanel--customButton': button\n  });\n  var swatchClass = 'euiColorPicker__swatchSelect';\n  var testSubjAnchor = 'colorPickerAnchor';\n  var testSubjPopover = 'colorPickerPopover';\n  var inputClasses = classNames('euiColorPicker__input', {\n    'euiColorPicker__input--inGroup': prepend || append\n  });\n\n  var handleOnChange = function handleOnChange(text) {\n    var output = getOutput(text, showAlpha);\n\n    if (output.isValid) {\n      prevColor.current = output.rgba.join();\n    }\n\n    onChange(text, output);\n  };\n\n  var closeColorSelector = function closeColorSelector() {\n    var shouldDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    if (shouldDelay) {\n      setTimeout(function () {\n        return setIsColorSelectorShown(false);\n      });\n    } else {\n      setIsColorSelectorShown(false);\n    }\n  };\n\n  var showColorSelector = function showColorSelector() {\n    var shouldFocusInside = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (isColorSelectorShown || readOnly) return;\n\n    if (onFocus) {\n      onFocus();\n    }\n\n    setPopoverShouldOwnFocus(shouldFocusInside);\n    setIsColorSelectorShown(true);\n  };\n\n  var handleToggle = function handleToggle() {\n    if (isColorSelectorShown) {\n      closeColorSelector();\n    } else {\n      showColorSelector(true);\n    }\n  };\n\n  var handleFinalSelection = function handleFinalSelection() {\n    // When the trigger is an input, focus the input so you can adjust\n    if (inputRef) {\n      inputRef.focus();\n    }\n\n    closeColorSelector(true);\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    if (event.key === keys.ENTER) {\n      if (isColorSelectorShown) {\n        handleFinalSelection();\n      } else {\n        showColorSelector();\n      }\n    }\n  };\n\n  var handleInputActivity = function handleInputActivity(event) {\n    if (isKeyboardEvent(event)) {\n      if (event.key === keys.ENTER) {\n        event.preventDefault();\n        handleToggle();\n      }\n    } else {\n      showColorSelector();\n    }\n  };\n\n  var handleToggleOnKeyDown = function handleToggleOnKeyDown(event) {\n    if (event.key === keys.ARROW_DOWN) {\n      event.preventDefault();\n\n      if (isColorSelectorShown) {\n        var nextFocusEl = mode !== 'swatch' ? satruationRef : swatchRef;\n\n        if (nextFocusEl.current) {\n          nextFocusEl.current.focus();\n        }\n      } else {\n        showColorSelector(true);\n      }\n    }\n  };\n\n  var handleColorInput = function handleColorInput(event) {\n    handleOnChange(event.target.value);\n    var newColor = getChromaColor(event.target.value, showAlpha);\n\n    if (newColor) {\n      updateColorAsHsv(newColor.hsv());\n    }\n  };\n\n  var handleClearInput = function handleClearInput() {\n    handleOnChange('');\n\n    if (secondaryInputDisplay === 'none' && isColorSelectorShown) {\n      closeColorSelector();\n    }\n  };\n\n  var updateWithHsv = function updateWithHsv(hsv) {\n    var color = chroma.hsv.apply(chroma, _toConsumableArray(hsv)).alpha(alphaChannel);\n    var formatted;\n\n    if (preferredFormat === 'rgba') {\n      formatted = alphaChannel < 1 ? color.rgba().join(RGB_JOIN) : color.rgb().join(RGB_JOIN);\n    } else {\n      formatted = color.hex();\n    }\n\n    handleOnChange(formatted);\n    updateColorAsHsv(hsv);\n  };\n\n  var handleColorSelection = function handleColorSelection(color) {\n    var _usableHsv = _slicedToArray(usableHsv, 1),\n        h = _usableHsv[0];\n\n    var _color = _slicedToArray(color, 3),\n        s = _color[1],\n        v = _color[2];\n\n    var newHsv = [h, s, v];\n    updateWithHsv(newHsv);\n  };\n\n  var handleHueSelection = function handleHueSelection(hue) {\n    var _usableHsv2 = _slicedToArray(usableHsv, 3),\n        s = _usableHsv2[1],\n        v = _usableHsv2[2];\n\n    var newHsv = [hue, s, v];\n    updateWithHsv(newHsv);\n  };\n\n  var handleSwatchSelection = function handleSwatchSelection(color) {\n    var newColor = getChromaColor(color, showAlpha);\n    handleOnChange(color);\n\n    if (newColor) {\n      updateColorAsHsv(newColor.hsv());\n    }\n\n    handleFinalSelection();\n  };\n\n  var handleAlphaSelection = function handleAlphaSelection(e, isValid) {\n    var target = e.target;\n    setAlphaRangeValue(target.value || '');\n\n    if (isValid) {\n      var alpha = parseInt(target.value, 10) / 100;\n      var newColor = chromaColor ? chromaColor.alpha(alpha) : null;\n      var hex = newColor ? newColor.hex() : HEX_FALLBACK;\n      var rgba = newColor ? newColor.rgba() : RGB_FALLBACK;\n\n      var _text;\n\n      if (preferredFormat === 'rgba') {\n        _text = alpha < 1 ? rgba.join(RGB_JOIN) : rgba.slice(0, 3).join(RGB_JOIN);\n      } else {\n        _text = hex;\n      }\n\n      onChange(_text, {\n        hex: hex,\n        rgba: rgba,\n        isValid: !!newColor\n      });\n    }\n  };\n\n  var inlineInput = secondaryInputDisplay !== 'none' && React.createElement(EuiI18n, {\n    tokens: ['euiColorPicker.colorLabel', 'euiColorPicker.colorErrorMessage', 'euiColorPicker.transparent'],\n    defaults: ['Color value', 'Invalid color value', 'Transparent']\n  }, function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 3),\n        colorLabel = _ref5[0],\n        colorErrorMessage = _ref5[1],\n        transparent = _ref5[2];\n\n    return React.createElement(EuiFormRow, {\n      display: \"rowCompressed\",\n      isInvalid: isInvalid,\n      error: isInvalid ? colorErrorMessage : null\n    }, React.createElement(EuiFormControlLayout, {\n      clear: isClearable && color && !readOnly && !disabled ? {\n        onClick: handleClearInput\n      } : undefined,\n      readOnly: readOnly,\n      compressed: compressed\n    }, React.createElement(EuiFieldText, {\n      compressed: true,\n      value: color ? color.toUpperCase() : HEX_FALLBACK,\n      placeholder: !color ? placeholder || transparent : undefined,\n      onChange: handleColorInput,\n      isInvalid: isInvalid,\n      disabled: disabled,\n      readOnly: readOnly,\n      \"aria-label\": colorLabel,\n      autoComplete: \"off\",\n      \"data-test-subj\": \"\".concat(secondaryInputDisplay, \"ColorPickerInput\")\n    })));\n  });\n  var showSecondaryInputOnly = mode === 'secondaryInput';\n  var showPicker = mode !== 'swatch' && !showSecondaryInputOnly;\n  var showSwatches = mode !== 'picker' && !showSecondaryInputOnly;\n  var composite = React.createElement(React.Fragment, null, secondaryInputDisplay === 'top' && React.createElement(React.Fragment, null, inlineInput, React.createElement(EuiSpacer, {\n    size: \"s\"\n  })), showPicker && React.createElement(\"div\", {\n    onKeyDown: handleOnKeyDown\n  }, React.createElement(EuiSaturation, {\n    id: id,\n    color: usableHsv,\n    hex: chromaColor ? chromaColor.hex() : undefined,\n    onChange: handleColorSelection,\n    ref: satruationRef\n  }), React.createElement(EuiHue, {\n    id: id,\n    hue: usableHsv[0],\n    hex: chromaColor ? chromaColor.hex() : undefined,\n    onChange: handleHueSelection\n  })), showSwatches && React.createElement(EuiFlexGroup, {\n    wrap: true,\n    responsive: false,\n    gutterSize: \"s\",\n    role: \"listbox\"\n  }, swatches.map(function (swatch, index) {\n    return React.createElement(EuiFlexItem, {\n      grow: false,\n      key: swatch\n    }, React.createElement(EuiI18n, {\n      token: \"euiColorPicker.swatchAriaLabel\",\n      values: {\n        swatch: swatch\n      },\n      default: \"Select {swatch} as the color\"\n    }, function (swatchAriaLabel) {\n      return React.createElement(EuiColorPickerSwatch, {\n        className: swatchClass,\n        color: swatch,\n        onClick: function onClick() {\n          return handleSwatchSelection(swatch);\n        },\n        \"aria-label\": swatchAriaLabel,\n        role: \"option\",\n        ref: index === 0 ? swatchRef : undefined\n      });\n    }));\n  })), secondaryInputDisplay === 'bottom' && React.createElement(React.Fragment, null, mode !== 'picker' && React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), inlineInput), showAlpha && React.createElement(React.Fragment, null, React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), React.createElement(EuiI18n, {\n    token: \"euiColorPicker.alphaLabel\",\n    default: \"Alpha channel (opacity) value\"\n  }, function (alphaLabel) {\n    return React.createElement(EuiRange, {\n      className: \"euiColorPicker__alphaRange\",\n      \"data-test-subj\": \"colorPickerAlpha\",\n      compressed: true,\n      showInput: true,\n      max: 100,\n      min: 0,\n      value: alphaRangeValue,\n      append: \"%\",\n      onChange: handleAlphaSelection,\n      \"aria-label\": alphaLabel\n    });\n  })));\n  var buttonOrInput;\n\n  if (button) {\n    buttonOrInput = cloneElement(button, {\n      onClick: handleToggle,\n      id: id,\n      disabled: disabled,\n      'data-test-subj': testSubjAnchor\n    });\n  } else {\n    var colorStyle = chromaColor ? chromaColor.css() : undefined;\n    buttonOrInput = React.createElement(EuiFormControlLayout, {\n      icon: !readOnly ? {\n        type: 'arrowDown',\n        side: 'right'\n      } : undefined,\n      clear: isClearable && color && !readOnly && !disabled ? {\n        onClick: handleClearInput\n      } : undefined,\n      readOnly: readOnly,\n      fullWidth: fullWidth,\n      compressed: compressed,\n      onKeyDown: handleToggleOnKeyDown,\n      prepend: prepend,\n      append: append\n    }, React.createElement(\"div\", {\n      // Used to pass the chosen color through to form layout SVG using currentColor\n      style: {\n        color: colorStyle\n      }\n    }, React.createElement(EuiI18n, {\n      tokens: ['euiColorPicker.openLabel', 'euiColorPicker.closeLabel', 'euiColorPicker.transparent'],\n      defaults: ['Press the escape key to close the popover', 'Press the down key to open a popover containing color options', 'Transparent']\n    }, function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 3),\n          openLabel = _ref7[0],\n          closeLabel = _ref7[1],\n          transparent = _ref7[2];\n\n      return React.createElement(EuiFieldText, {\n        className: inputClasses,\n        onClick: handleInputActivity,\n        onKeyDown: handleInputActivity,\n        value: color ? color.toUpperCase() : HEX_FALLBACK,\n        placeholder: !color ? placeholder || transparent : undefined,\n        id: id,\n        onChange: handleColorInput,\n        icon: chromaColor ? 'swatchInput' : 'stopSlash',\n        inputRef: setInputRef,\n        isInvalid: isInvalid,\n        compressed: compressed,\n        disabled: disabled,\n        readOnly: readOnly,\n        fullWidth: fullWidth,\n        autoComplete: \"off\",\n        \"data-test-subj\": testSubjAnchor,\n        \"aria-label\": isColorSelectorShown ? openLabel : closeLabel\n      });\n    })));\n  }\n\n  return display === 'inline' ? React.createElement(\"div\", {\n    className: classes\n  }, composite) : React.createElement(EuiPopover, {\n    ownFocus: popoverShouldOwnFocus,\n    button: buttonOrInput,\n    isOpen: isColorSelectorShown,\n    closePopover: handleFinalSelection,\n    zIndex: popoverZIndex,\n    className: popoverClass,\n    panelClassName: panelClasses,\n    display: button ? 'inlineBlock' : 'block',\n    attachToAnchor: button ? false : true,\n    anchorPosition: \"downLeft\",\n    panelPaddingSize: \"s\"\n  }, React.createElement(\"div\", {\n    className: classes,\n    \"data-test-subj\": testSubjPopover\n  }, React.createElement(EuiFocusTrap, {\n    clickOutsideDisables: true\n  }, React.createElement(EuiScreenReaderOnly, null, React.createElement(\"p\", {\n    \"aria-live\": \"polite\"\n  }, React.createElement(EuiI18n, {\n    token: \"euiColorPicker.screenReaderAnnouncement\",\n    default: \"A popup with a range of selectable colors opened. Tab forward to cycle through colors choices or press escape to close this popup.\"\n  }))), composite)));\n};\nEuiColorPicker.propTypes = {\n  /**\n     *  Custom element to use instead of text input\n     */\n  button: PropTypes.element,\n\n  /**\n     *  Use the compressed style for EuiFieldText\n     */\n  compressed: PropTypes.bool,\n  display: PropTypes.oneOf([\"default\", \"inline\"]),\n  disabled: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n\n  /**\n     *  Custom validation flag\n     */\n  isInvalid: PropTypes.bool,\n\n  /**\n     * Choose between swatches with gradient picker (default), swatches only, gradient picker only, or secondary input only.\n     */\n  mode: PropTypes.oneOf([\"default\", \"swatch\", \"picker\", \"secondaryInput\"]),\n\n  /**\n     *  Custom z-index for the popover\n     */\n  popoverZIndex: PropTypes.number,\n  readOnly: PropTypes.bool,\n\n  /**\n     *  Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\n     */\n  swatches: PropTypes.arrayOf(PropTypes.string.isRequired),\n\n  /**\n     * Creates an input group with element(s) coming before input. It only shows when the `display` is set to `default`.\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.any,\n\n  /**\n     * Creates an input group with element(s) coming after input. It only shows when the `display` is set to `default`.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.any,\n\n  /**\n     * Whether to render the alpha channel (opacity) value range slider.\n     */\n  showAlpha: PropTypes.bool,\n\n  /**\n     * Will format the text input in the provided format when possible (hue and saturation selection)\n     * Exceptions: Manual text input and swatches will display as-authored\n     * Default is to display the last format entered by the user\n     */\n  format: PropTypes.oneOf([\"hex\", \"rgba\"]),\n\n  /**\n     * Placement option for a secondary color value input.\n     */\n  secondaryInputDisplay: PropTypes.oneOf([\"top\", \"bottom\", \"none\"]),\n\n  /**\n     * Add a button to the primary input to clear its value.\n     */\n  isClearable: PropTypes.bool,\n\n  /**\n     * Text to replace the default 'Transparent' placeholder for unset color values.\n     */\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * hex (string)\n     * RGB (as comma separated string)\n     * RGBa (as comma separated string)\n     * Empty string will register as 'transparent'\n     */\n  color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([null])]),\n  onBlur: PropTypes.func,\n\n  /**\n     * text (string, as entered or selected)\n     * hex (8-digit hex if alpha < 1, otherwise 6-digit hex)\n     * RGBa (as array; values of NaN if color is invalid)\n     * isValid (boolean signifying if the input text is a valid color)\n     */\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func\n};\nEuiColorPicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiColorPicker\",\n  \"props\": {\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Use the compressed style for EuiFieldText\"\n    },\n    \"display\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"default\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"inline\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mode\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"default\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"swatch\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"picker\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"secondaryInput\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Choose between swatches with gradient picker (default), swatches only, gradient picker only, or secondary input only.\"\n    },\n    \"readOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"swatches\": {\n      \"defaultValue\": {\n        \"value\": \"VISUALIZATION_COLORS\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\"\n    },\n    \"showAlpha\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether to render the alpha channel (opacity) value range slider.\"\n    },\n    \"secondaryInputDisplay\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"top\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"bottom\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Placement option for a secondary color value input.\"\n    },\n    \"isClearable\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Add a button to the primary input to clear its value.\"\n    },\n    \"button\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"Custom element to use instead of text input\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Custom validation flag\"\n    },\n    \"popoverZIndex\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Custom z-index for the popover\"\n    },\n    \"prepend\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming before input. It only shows when the `display` is set to `default`.\\n`string` | `ReactElement` or an array of these\"\n    },\n    \"append\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming after input. It only shows when the `display` is set to `default`.\\n`string` | `ReactElement` or an array of these\"\n    },\n    \"format\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"hex\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"rgba\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Will format the text input in the provided format when possible (hue and saturation selection)\\nExceptions: Manual text input and swatches will display as-authored\\nDefault is to display the last format entered by the user\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Text to replace the default 'Transparent' placeholder for unset color values.\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"null\",\n            \"computed\": false\n          }]\n        }]\n      },\n      \"required\": false,\n      \"description\": \"hex (string)\\nRGB (as comma separated string)\\nRGBa (as comma separated string)\\nEmpty string will register as 'transparent'\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"text (string, as entered or selected)\\nhex (8-digit hex if alpha < 1, otherwise 6-digit hex)\\nRGBa (as array; values of NaN if color is invalid)\\nisValid (boolean signifying if the input text is a valid color)\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};","map":{"version":3,"sources":["/Users/scott/Projects/flight_review_project/node_modules/@elastic/eui/es/components/color_picker/color_picker.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","_typeof","obj","constructor","PropTypes","React","cloneElement","useEffect","useMemo","useRef","useState","classNames","chroma","EuiScreenReaderOnly","EuiColorPickerSwatch","EuiFocusTrap","EuiFlexGroup","EuiFlexItem","EuiFieldText","EuiFormControlLayout","EuiFormRow","EuiRange","EuiI18n","EuiPopover","EuiSpacer","VISUALIZATION_COLORS","keys","EuiHue","EuiSaturation","getChromaColor","parseColor","HEX_FALLBACK","HSV_FALLBACK","RGB_FALLBACK","RGB_JOIN","isKeyboardEvent","event","getOutput","text","showAlpha","arguments","color","isValid","alpha","rgba","hex","getHsv","hsv","fallback","hue","isNaN","EuiColorPicker","_ref","button","className","_ref$compressed","compressed","disabled","_ref$display","display","_ref$fullWidth","fullWidth","id","isInvalid","_ref$mode","mode","onBlur","onChange","onFocus","_ref$readOnly","readOnly","_ref$swatches","swatches","popoverZIndex","prepend","append","_ref$showAlpha","format","_ref$secondaryInputDi","secondaryInputDisplay","_ref$isClearable","isClearable","placeholder","preferredFormat","parsed","chromaColor","_useState","_useState2","alphaRangeValue","setAlphaRangeValue","alphaChannel","percent","toFixed","_useState3","_useState4","isColorSelectorShown","setIsColorSelectorShown","_useState5","_useState6","inputRef","setInputRef","_useState7","_useState8","popoverShouldOwnFocus","setPopoverShouldOwnFocus","prevColor","join","_useState9","_useState10","colorAsHsv","setColorAsHsv","usableHsv","current","_chromaColor$hsv","_chromaColor$hsv2","h","s","v","satruationRef","swatchRef","updateColorAsHsv","_ref2","_ref3","classes","popoverClass","panelClasses","swatchClass","testSubjAnchor","testSubjPopover","inputClasses","handleOnChange","output","closeColorSelector","shouldDelay","setTimeout","showColorSelector","shouldFocusInside","handleToggle","handleFinalSelection","focus","handleOnKeyDown","key","ENTER","handleInputActivity","preventDefault","handleToggleOnKeyDown","ARROW_DOWN","nextFocusEl","handleColorInput","target","newColor","handleClearInput","updateWithHsv","apply","formatted","rgb","handleColorSelection","_usableHsv","_color","newHsv","handleHueSelection","_usableHsv2","handleSwatchSelection","handleAlphaSelection","e","parseInt","_text","slice","inlineInput","createElement","tokens","defaults","_ref4","_ref5","colorLabel","colorErrorMessage","transparent","error","clear","onClick","toUpperCase","autoComplete","concat","showSecondaryInputOnly","showPicker","showSwatches","composite","Fragment","size","onKeyDown","ref","wrap","responsive","gutterSize","role","map","swatch","index","grow","token","values","default","swatchAriaLabel","alphaLabel","showInput","max","min","buttonOrInput","colorStyle","css","icon","type","side","style","_ref6","_ref7","openLabel","closeLabel","ownFocus","isOpen","closePopover","zIndex","panelClassName","attachToAnchor","anchorPosition","panelPaddingSize","clickOutsideDisables","propTypes","element","bool","oneOf","string","number","arrayOf","isRequired","any","oneOfType","func","__docgenInfo"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport PropTypes from \"prop-types\";\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { cloneElement, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport chroma from 'chroma-js';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiColorPickerSwatch } from './color_picker_swatch';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport { EuiFieldText, EuiFormControlLayout, EuiFormRow, EuiRange } from '../form';\nimport { EuiI18n } from '../i18n';\nimport { EuiPopover } from '../popover';\nimport { EuiSpacer } from '../spacer';\nimport { VISUALIZATION_COLORS, keys } from '../../services';\nimport { EuiHue } from './hue';\nimport { EuiSaturation } from './saturation';\nimport { getChromaColor, parseColor, HEX_FALLBACK, HSV_FALLBACK, RGB_FALLBACK, RGB_JOIN } from './utils';\n\nfunction isKeyboardEvent(event) {\n  return _typeof(event) === 'object' && 'key' in event;\n}\n\nvar getOutput = function getOutput(text) {\n  var showAlpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var color = getChromaColor(text, true);\n  var isValid = true;\n\n  if (!showAlpha && color !== null) {\n    isValid = color.alpha() === 1;\n  } // Note that if a consumer has disallowed opacity,\n  // we still return the color with an alpha channel, but mark it as invalid\n\n\n  return color ? {\n    rgba: color.rgba(),\n    hex: color.hex(),\n    isValid: isValid\n  } : {\n    rgba: RGB_FALLBACK,\n    hex: HEX_FALLBACK,\n    isValid: false\n  };\n};\n\nvar getHsv = function getHsv(hsv) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Chroma's passthrough (RGB) parsing determines that black/white/gray are hue-less and returns `NaN`\n  // For our purposes we can process `NaN` as `0` if necessary\n  if (!hsv) return HSV_FALLBACK;\n  var hue = isNaN(hsv[0]) ? fallback : hsv[0];\n  return [hue, hsv[1], hsv[2]];\n};\n\nexport var EuiColorPicker = function EuiColorPicker(_ref) {\n  var button = _ref.button,\n      className = _ref.className,\n      color = _ref.color,\n      _ref$compressed = _ref.compressed,\n      compressed = _ref$compressed === void 0 ? false : _ref$compressed,\n      disabled = _ref.disabled,\n      _ref$display = _ref.display,\n      display = _ref$display === void 0 ? 'default' : _ref$display,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      id = _ref.id,\n      isInvalid = _ref.isInvalid,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'default' : _ref$mode,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$swatches = _ref.swatches,\n      swatches = _ref$swatches === void 0 ? VISUALIZATION_COLORS : _ref$swatches,\n      popoverZIndex = _ref.popoverZIndex,\n      prepend = _ref.prepend,\n      append = _ref.append,\n      _ref$showAlpha = _ref.showAlpha,\n      showAlpha = _ref$showAlpha === void 0 ? false : _ref$showAlpha,\n      format = _ref.format,\n      _ref$secondaryInputDi = _ref.secondaryInputDisplay,\n      secondaryInputDisplay = _ref$secondaryInputDi === void 0 ? 'none' : _ref$secondaryInputDi,\n      _ref$isClearable = _ref.isClearable,\n      isClearable = _ref$isClearable === void 0 ? false : _ref$isClearable,\n      placeholder = _ref.placeholder;\n  var preferredFormat = useMemo(function () {\n    if (format) return format;\n    var parsed = parseColor(color);\n    return parsed != null && _typeof(parsed) === 'object' ? 'rgba' : 'hex';\n  }, [color, format]);\n  var chromaColor = useMemo(function () {\n    return getChromaColor(color, showAlpha);\n  }, [color, showAlpha]);\n\n  var _useState = useState('100'),\n      _useState2 = _slicedToArray(_useState, 2),\n      alphaRangeValue = _useState2[0],\n      setAlphaRangeValue = _useState2[1];\n\n  var alphaChannel = useMemo(function () {\n    return chromaColor ? chromaColor.alpha() : 1;\n  }, [chromaColor]);\n  useEffect(function () {\n    var percent = (alphaChannel * 100).toFixed();\n    setAlphaRangeValue(percent);\n  }, [alphaChannel]);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isColorSelectorShown = _useState4[0],\n      setIsColorSelectorShown = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputRef = _useState6[0],\n      setInputRef = _useState6[1]; // Ideally this is uses `useRef`, but `EuiFieldText` isn't ready for that\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popoverShouldOwnFocus = _useState8[0],\n      setPopoverShouldOwnFocus = _useState8[1];\n\n  var prevColor = useRef(chromaColor ? chromaColor.rgba().join() : null);\n\n  var _useState9 = useState(chromaColor ? getHsv(chromaColor.hsv()) : HSV_FALLBACK),\n      _useState10 = _slicedToArray(_useState9, 2),\n      colorAsHsv = _useState10[0],\n      setColorAsHsv = _useState10[1];\n\n  var usableHsv = useMemo(function () {\n    if (chromaColor && chromaColor.rgba().join() !== prevColor.current) {\n      var _chromaColor$hsv = chromaColor.hsv(),\n          _chromaColor$hsv2 = _slicedToArray(_chromaColor$hsv, 3),\n          h = _chromaColor$hsv2[0],\n          s = _chromaColor$hsv2[1],\n          v = _chromaColor$hsv2[2];\n\n      var hue = isNaN(h) ? colorAsHsv[0] : h;\n      return [hue, s, v];\n    }\n\n    return colorAsHsv;\n  }, [chromaColor, colorAsHsv]);\n  var satruationRef = useRef(null);\n  var swatchRef = useRef(null);\n\n  var updateColorAsHsv = function updateColorAsHsv(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n        h = _ref3[0],\n        s = _ref3[1],\n        v = _ref3[2];\n\n    setColorAsHsv(getHsv([h, s, v], usableHsv[0]));\n  };\n\n  var classes = classNames('euiColorPicker', className);\n  var popoverClass = 'euiColorPicker__popoverAnchor';\n  var panelClasses = classNames('euiColorPicker__popoverPanel', {\n    'euiColorPicker__popoverPanel--pickerOnly': mode === 'picker' && secondaryInputDisplay !== 'bottom',\n    'euiColorPicker__popoverPanel--customButton': button\n  });\n  var swatchClass = 'euiColorPicker__swatchSelect';\n  var testSubjAnchor = 'colorPickerAnchor';\n  var testSubjPopover = 'colorPickerPopover';\n  var inputClasses = classNames('euiColorPicker__input', {\n    'euiColorPicker__input--inGroup': prepend || append\n  });\n\n  var handleOnChange = function handleOnChange(text) {\n    var output = getOutput(text, showAlpha);\n\n    if (output.isValid) {\n      prevColor.current = output.rgba.join();\n    }\n\n    onChange(text, output);\n  };\n\n  var closeColorSelector = function closeColorSelector() {\n    var shouldDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    if (shouldDelay) {\n      setTimeout(function () {\n        return setIsColorSelectorShown(false);\n      });\n    } else {\n      setIsColorSelectorShown(false);\n    }\n  };\n\n  var showColorSelector = function showColorSelector() {\n    var shouldFocusInside = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (isColorSelectorShown || readOnly) return;\n\n    if (onFocus) {\n      onFocus();\n    }\n\n    setPopoverShouldOwnFocus(shouldFocusInside);\n    setIsColorSelectorShown(true);\n  };\n\n  var handleToggle = function handleToggle() {\n    if (isColorSelectorShown) {\n      closeColorSelector();\n    } else {\n      showColorSelector(true);\n    }\n  };\n\n  var handleFinalSelection = function handleFinalSelection() {\n    // When the trigger is an input, focus the input so you can adjust\n    if (inputRef) {\n      inputRef.focus();\n    }\n\n    closeColorSelector(true);\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    if (event.key === keys.ENTER) {\n      if (isColorSelectorShown) {\n        handleFinalSelection();\n      } else {\n        showColorSelector();\n      }\n    }\n  };\n\n  var handleInputActivity = function handleInputActivity(event) {\n    if (isKeyboardEvent(event)) {\n      if (event.key === keys.ENTER) {\n        event.preventDefault();\n        handleToggle();\n      }\n    } else {\n      showColorSelector();\n    }\n  };\n\n  var handleToggleOnKeyDown = function handleToggleOnKeyDown(event) {\n    if (event.key === keys.ARROW_DOWN) {\n      event.preventDefault();\n\n      if (isColorSelectorShown) {\n        var nextFocusEl = mode !== 'swatch' ? satruationRef : swatchRef;\n\n        if (nextFocusEl.current) {\n          nextFocusEl.current.focus();\n        }\n      } else {\n        showColorSelector(true);\n      }\n    }\n  };\n\n  var handleColorInput = function handleColorInput(event) {\n    handleOnChange(event.target.value);\n    var newColor = getChromaColor(event.target.value, showAlpha);\n\n    if (newColor) {\n      updateColorAsHsv(newColor.hsv());\n    }\n  };\n\n  var handleClearInput = function handleClearInput() {\n    handleOnChange('');\n\n    if (secondaryInputDisplay === 'none' && isColorSelectorShown) {\n      closeColorSelector();\n    }\n  };\n\n  var updateWithHsv = function updateWithHsv(hsv) {\n    var color = chroma.hsv.apply(chroma, _toConsumableArray(hsv)).alpha(alphaChannel);\n    var formatted;\n\n    if (preferredFormat === 'rgba') {\n      formatted = alphaChannel < 1 ? color.rgba().join(RGB_JOIN) : color.rgb().join(RGB_JOIN);\n    } else {\n      formatted = color.hex();\n    }\n\n    handleOnChange(formatted);\n    updateColorAsHsv(hsv);\n  };\n\n  var handleColorSelection = function handleColorSelection(color) {\n    var _usableHsv = _slicedToArray(usableHsv, 1),\n        h = _usableHsv[0];\n\n    var _color = _slicedToArray(color, 3),\n        s = _color[1],\n        v = _color[2];\n\n    var newHsv = [h, s, v];\n    updateWithHsv(newHsv);\n  };\n\n  var handleHueSelection = function handleHueSelection(hue) {\n    var _usableHsv2 = _slicedToArray(usableHsv, 3),\n        s = _usableHsv2[1],\n        v = _usableHsv2[2];\n\n    var newHsv = [hue, s, v];\n    updateWithHsv(newHsv);\n  };\n\n  var handleSwatchSelection = function handleSwatchSelection(color) {\n    var newColor = getChromaColor(color, showAlpha);\n    handleOnChange(color);\n\n    if (newColor) {\n      updateColorAsHsv(newColor.hsv());\n    }\n\n    handleFinalSelection();\n  };\n\n  var handleAlphaSelection = function handleAlphaSelection(e, isValid) {\n    var target = e.target;\n    setAlphaRangeValue(target.value || '');\n\n    if (isValid) {\n      var alpha = parseInt(target.value, 10) / 100;\n      var newColor = chromaColor ? chromaColor.alpha(alpha) : null;\n      var hex = newColor ? newColor.hex() : HEX_FALLBACK;\n      var rgba = newColor ? newColor.rgba() : RGB_FALLBACK;\n\n      var _text;\n\n      if (preferredFormat === 'rgba') {\n        _text = alpha < 1 ? rgba.join(RGB_JOIN) : rgba.slice(0, 3).join(RGB_JOIN);\n      } else {\n        _text = hex;\n      }\n\n      onChange(_text, {\n        hex: hex,\n        rgba: rgba,\n        isValid: !!newColor\n      });\n    }\n  };\n\n  var inlineInput = secondaryInputDisplay !== 'none' && React.createElement(EuiI18n, {\n    tokens: ['euiColorPicker.colorLabel', 'euiColorPicker.colorErrorMessage', 'euiColorPicker.transparent'],\n    defaults: ['Color value', 'Invalid color value', 'Transparent']\n  }, function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 3),\n        colorLabel = _ref5[0],\n        colorErrorMessage = _ref5[1],\n        transparent = _ref5[2];\n\n    return React.createElement(EuiFormRow, {\n      display: \"rowCompressed\",\n      isInvalid: isInvalid,\n      error: isInvalid ? colorErrorMessage : null\n    }, React.createElement(EuiFormControlLayout, {\n      clear: isClearable && color && !readOnly && !disabled ? {\n        onClick: handleClearInput\n      } : undefined,\n      readOnly: readOnly,\n      compressed: compressed\n    }, React.createElement(EuiFieldText, {\n      compressed: true,\n      value: color ? color.toUpperCase() : HEX_FALLBACK,\n      placeholder: !color ? placeholder || transparent : undefined,\n      onChange: handleColorInput,\n      isInvalid: isInvalid,\n      disabled: disabled,\n      readOnly: readOnly,\n      \"aria-label\": colorLabel,\n      autoComplete: \"off\",\n      \"data-test-subj\": \"\".concat(secondaryInputDisplay, \"ColorPickerInput\")\n    })));\n  });\n  var showSecondaryInputOnly = mode === 'secondaryInput';\n  var showPicker = mode !== 'swatch' && !showSecondaryInputOnly;\n  var showSwatches = mode !== 'picker' && !showSecondaryInputOnly;\n  var composite = React.createElement(React.Fragment, null, secondaryInputDisplay === 'top' && React.createElement(React.Fragment, null, inlineInput, React.createElement(EuiSpacer, {\n    size: \"s\"\n  })), showPicker && React.createElement(\"div\", {\n    onKeyDown: handleOnKeyDown\n  }, React.createElement(EuiSaturation, {\n    id: id,\n    color: usableHsv,\n    hex: chromaColor ? chromaColor.hex() : undefined,\n    onChange: handleColorSelection,\n    ref: satruationRef\n  }), React.createElement(EuiHue, {\n    id: id,\n    hue: usableHsv[0],\n    hex: chromaColor ? chromaColor.hex() : undefined,\n    onChange: handleHueSelection\n  })), showSwatches && React.createElement(EuiFlexGroup, {\n    wrap: true,\n    responsive: false,\n    gutterSize: \"s\",\n    role: \"listbox\"\n  }, swatches.map(function (swatch, index) {\n    return React.createElement(EuiFlexItem, {\n      grow: false,\n      key: swatch\n    }, React.createElement(EuiI18n, {\n      token: \"euiColorPicker.swatchAriaLabel\",\n      values: {\n        swatch: swatch\n      },\n      default: \"Select {swatch} as the color\"\n    }, function (swatchAriaLabel) {\n      return React.createElement(EuiColorPickerSwatch, {\n        className: swatchClass,\n        color: swatch,\n        onClick: function onClick() {\n          return handleSwatchSelection(swatch);\n        },\n        \"aria-label\": swatchAriaLabel,\n        role: \"option\",\n        ref: index === 0 ? swatchRef : undefined\n      });\n    }));\n  })), secondaryInputDisplay === 'bottom' && React.createElement(React.Fragment, null, mode !== 'picker' && React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), inlineInput), showAlpha && React.createElement(React.Fragment, null, React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), React.createElement(EuiI18n, {\n    token: \"euiColorPicker.alphaLabel\",\n    default: \"Alpha channel (opacity) value\"\n  }, function (alphaLabel) {\n    return React.createElement(EuiRange, {\n      className: \"euiColorPicker__alphaRange\",\n      \"data-test-subj\": \"colorPickerAlpha\",\n      compressed: true,\n      showInput: true,\n      max: 100,\n      min: 0,\n      value: alphaRangeValue,\n      append: \"%\",\n      onChange: handleAlphaSelection,\n      \"aria-label\": alphaLabel\n    });\n  })));\n  var buttonOrInput;\n\n  if (button) {\n    buttonOrInput = cloneElement(button, {\n      onClick: handleToggle,\n      id: id,\n      disabled: disabled,\n      'data-test-subj': testSubjAnchor\n    });\n  } else {\n    var colorStyle = chromaColor ? chromaColor.css() : undefined;\n    buttonOrInput = React.createElement(EuiFormControlLayout, {\n      icon: !readOnly ? {\n        type: 'arrowDown',\n        side: 'right'\n      } : undefined,\n      clear: isClearable && color && !readOnly && !disabled ? {\n        onClick: handleClearInput\n      } : undefined,\n      readOnly: readOnly,\n      fullWidth: fullWidth,\n      compressed: compressed,\n      onKeyDown: handleToggleOnKeyDown,\n      prepend: prepend,\n      append: append\n    }, React.createElement(\"div\", {\n      // Used to pass the chosen color through to form layout SVG using currentColor\n      style: {\n        color: colorStyle\n      }\n    }, React.createElement(EuiI18n, {\n      tokens: ['euiColorPicker.openLabel', 'euiColorPicker.closeLabel', 'euiColorPicker.transparent'],\n      defaults: ['Press the escape key to close the popover', 'Press the down key to open a popover containing color options', 'Transparent']\n    }, function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 3),\n          openLabel = _ref7[0],\n          closeLabel = _ref7[1],\n          transparent = _ref7[2];\n\n      return React.createElement(EuiFieldText, {\n        className: inputClasses,\n        onClick: handleInputActivity,\n        onKeyDown: handleInputActivity,\n        value: color ? color.toUpperCase() : HEX_FALLBACK,\n        placeholder: !color ? placeholder || transparent : undefined,\n        id: id,\n        onChange: handleColorInput,\n        icon: chromaColor ? 'swatchInput' : 'stopSlash',\n        inputRef: setInputRef,\n        isInvalid: isInvalid,\n        compressed: compressed,\n        disabled: disabled,\n        readOnly: readOnly,\n        fullWidth: fullWidth,\n        autoComplete: \"off\",\n        \"data-test-subj\": testSubjAnchor,\n        \"aria-label\": isColorSelectorShown ? openLabel : closeLabel\n      });\n    })));\n  }\n\n  return display === 'inline' ? React.createElement(\"div\", {\n    className: classes\n  }, composite) : React.createElement(EuiPopover, {\n    ownFocus: popoverShouldOwnFocus,\n    button: buttonOrInput,\n    isOpen: isColorSelectorShown,\n    closePopover: handleFinalSelection,\n    zIndex: popoverZIndex,\n    className: popoverClass,\n    panelClassName: panelClasses,\n    display: button ? 'inlineBlock' : 'block',\n    attachToAnchor: button ? false : true,\n    anchorPosition: \"downLeft\",\n    panelPaddingSize: \"s\"\n  }, React.createElement(\"div\", {\n    className: classes,\n    \"data-test-subj\": testSubjPopover\n  }, React.createElement(EuiFocusTrap, {\n    clickOutsideDisables: true\n  }, React.createElement(EuiScreenReaderOnly, null, React.createElement(\"p\", {\n    \"aria-live\": \"polite\"\n  }, React.createElement(EuiI18n, {\n    token: \"euiColorPicker.screenReaderAnnouncement\",\n    default: \"A popup with a range of selectable colors opened. Tab forward to cycle through colors choices or press escape to close this popup.\"\n  }))), composite)));\n};\nEuiColorPicker.propTypes = {\n  /**\n     *  Custom element to use instead of text input\n     */\n  button: PropTypes.element,\n\n  /**\n     *  Use the compressed style for EuiFieldText\n     */\n  compressed: PropTypes.bool,\n  display: PropTypes.oneOf([\"default\", \"inline\"]),\n  disabled: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n\n  /**\n     *  Custom validation flag\n     */\n  isInvalid: PropTypes.bool,\n\n  /**\n     * Choose between swatches with gradient picker (default), swatches only, gradient picker only, or secondary input only.\n     */\n  mode: PropTypes.oneOf([\"default\", \"swatch\", \"picker\", \"secondaryInput\"]),\n\n  /**\n     *  Custom z-index for the popover\n     */\n  popoverZIndex: PropTypes.number,\n  readOnly: PropTypes.bool,\n\n  /**\n     *  Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\n     */\n  swatches: PropTypes.arrayOf(PropTypes.string.isRequired),\n\n  /**\n     * Creates an input group with element(s) coming before input. It only shows when the `display` is set to `default`.\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.any,\n\n  /**\n     * Creates an input group with element(s) coming after input. It only shows when the `display` is set to `default`.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.any,\n\n  /**\n     * Whether to render the alpha channel (opacity) value range slider.\n     */\n  showAlpha: PropTypes.bool,\n\n  /**\n     * Will format the text input in the provided format when possible (hue and saturation selection)\n     * Exceptions: Manual text input and swatches will display as-authored\n     * Default is to display the last format entered by the user\n     */\n  format: PropTypes.oneOf([\"hex\", \"rgba\"]),\n\n  /**\n     * Placement option for a secondary color value input.\n     */\n  secondaryInputDisplay: PropTypes.oneOf([\"top\", \"bottom\", \"none\"]),\n\n  /**\n     * Add a button to the primary input to clear its value.\n     */\n  isClearable: PropTypes.bool,\n\n  /**\n     * Text to replace the default 'Transparent' placeholder for unset color values.\n     */\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * hex (string)\n     * RGB (as comma separated string)\n     * RGBa (as comma separated string)\n     * Empty string will register as 'transparent'\n     */\n  color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([null])]),\n  onBlur: PropTypes.func,\n\n  /**\n     * text (string, as entered or selected)\n     * hex (8-digit hex if alpha < 1, otherwise 6-digit hex)\n     * RGBa (as array; values of NaN if color is invalid)\n     * isValid (boolean signifying if the input text is a valid color)\n     */\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func\n};\nEuiColorPicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EuiColorPicker\",\n  \"props\": {\n    \"compressed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Use the compressed style for EuiFieldText\"\n    },\n    \"display\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"default\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"inline\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mode\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"default\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"swatch\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"picker\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"secondaryInput\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Choose between swatches with gradient picker (default), swatches only, gradient picker only, or secondary input only.\"\n    },\n    \"readOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"swatches\": {\n      \"defaultValue\": {\n        \"value\": \"VISUALIZATION_COLORS\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"Array of hex strings (3 or 6 character) to use as swatch options. Defaults to EUI visualization colors\"\n    },\n    \"showAlpha\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether to render the alpha channel (opacity) value range slider.\"\n    },\n    \"secondaryInputDisplay\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"top\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"bottom\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"none\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Placement option for a secondary color value input.\"\n    },\n    \"isClearable\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Add a button to the primary input to clear its value.\"\n    },\n    \"button\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"Custom element to use instead of text input\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Custom validation flag\"\n    },\n    \"popoverZIndex\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Custom z-index for the popover\"\n    },\n    \"prepend\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming before input. It only shows when the `display` is set to `default`.\\n`string` | `ReactElement` or an array of these\"\n    },\n    \"append\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Creates an input group with element(s) coming after input. It only shows when the `display` is set to `default`.\\n`string` | `ReactElement` or an array of these\"\n    },\n    \"format\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"hex\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"rgba\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Will format the text input in the provided format when possible (hue and saturation selection)\\nExceptions: Manual text input and swatches will display as-authored\\nDefault is to display the last format entered by the user\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Text to replace the default 'Transparent' placeholder for unset color values.\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"aria-label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data-test-subj\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"null\",\n            \"computed\": false\n          }]\n        }]\n      },\n      \"required\": false,\n      \"description\": \"hex (string)\\nRGB (as comma separated string)\\nRGBa (as comma separated string)\\nEmpty string will register as 'transparent'\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"text (string, as entered or selected)\\nhex (8-digit hex if alpha < 1, otherwise 6-digit hex)\\nRGBa (as array; values of NaN if color is invalid)\\nisValid (boolean signifying if the input text is a valid color)\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}