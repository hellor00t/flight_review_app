{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';\n/*\n * For use when a component needs to set `ref` objects from multiple sources.\n * For instance, if a component accepts a `ref` prop but also needs its own\n * local reference for calculations, etc.\n * This hook handles setting multiple `ref`s of any available `ref` type\n * in a single callback function.\n */\n\nexport var useCombinedRefs = function useCombinedRefs(refs) {\n  return useCallback(function (node) {\n    return refs.forEach(function (ref) {\n      if (!ref) return;\n\n      if (typeof ref === 'function') {\n        ref(node);\n      } else {\n        ref.current = node;\n      }\n    });\n  }, [refs]);\n};","map":{"version":3,"sources":["/Users/scott/Projects/flight_review_project/node_modules/@elastic/eui/es/services/hooks/useCombinedRefs.js"],"names":["useCallback","useCombinedRefs","refs","node","forEach","ref","current"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAT,QAA4B,OAA5B;AACA;;;;;;;;AAQA,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC1D,SAAOF,WAAW,CAAC,UAAUG,IAAV,EAAgB;AACjC,WAAOD,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AACjC,UAAI,CAACA,GAAL,EAAU;;AAEV,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACF,IAAD,CAAH;AACD,OAFD,MAEO;AACLE,QAAAA,GAAG,CAACC,OAAJ,GAAcH,IAAd;AACD;AACF,KARM,CAAP;AASD,GAViB,EAUf,CAACD,IAAD,CAVe,CAAlB;AAWD,CAZM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';\n/*\n * For use when a component needs to set `ref` objects from multiple sources.\n * For instance, if a component accepts a `ref` prop but also needs its own\n * local reference for calculations, etc.\n * This hook handles setting multiple `ref`s of any available `ref` type\n * in a single callback function.\n */\n\nexport var useCombinedRefs = function useCombinedRefs(refs) {\n  return useCallback(function (node) {\n    return refs.forEach(function (ref) {\n      if (!ref) return;\n\n      if (typeof ref === 'function') {\n        ref(node);\n      } else {\n        ref.current = node;\n      }\n    });\n  }, [refs]);\n};"]},"metadata":{},"sourceType":"module"}